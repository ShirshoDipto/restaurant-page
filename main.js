(()=>{"use strict";var n={348:(n,e,t)=>{t.d(e,{Z:()=>l});var a=t(537),r=t.n(a),o=t(645),i=t.n(o),c=t(667),s=t.n(c),d=new URL(t(643),t.b),p=i()(r()),u=s()(d);p.push([n.id,"* {\n    margin: 0;\n    padding: 0;\n}\n\n\n.hello {\n    width: 400px;\n    height: 400px;\n    background: green;\n}\n\n#content {\n    min-height: 100vh;\n    min-width: 100vw;\n    display: flex;\n    flex-direction: column;\n    background-color: rgb(255 244 219);\n}\n\n.header {\n    height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n.main-container {\n    flex: 1;\n    background: url("+u+');\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-attachment: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.footer {\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.name h2 {\n    padding: 20px;\n}\n\n.name {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.res-menus {\n    display: flex;\n    justify-content: center;\n    gap: 60px;\n    padding: 20px;\n}\n\n.res-menus div {\n    border: thin solid red;\n}\n\n.res-menus div:hover {\n    text-decoration: underline;\n}\n\n\n/* Menu css */\n.all-menus {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 450px));\n    max-width: 70%;\n    border: thin solid red;\n    gap: 30px;\n    padding: 20px;\n}\n\n.menu-card {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 200px);\n    border: thin solid blue;\n    justify-content: space-between;\n    /* gap: 20px; */\n}\n\n.menu-card img {\n    width: 200px;\n    height: 200px;\n}\n\n.description {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 20px;\n}\n\n.description button {\n    width: 100px;\n}\n\n\n\n\n\n\n\n\n/* have to give credit\nPhoto by Pixabay: https://www.pexels.com/photo/alcohol-architecture-bar-beer-260922/ \n*/\n\n/*\nPhoto by Shourav Sheikh: https://www.pexels.com/photo/rice-platter-biriyani-11170284/ \n */\n\n\n /* \npixabay biriyani credit\n\n Image by <a href="https://pixabay.com/users/soumen59-8174545/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7599454">Soumen Ghosh</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7599454">Pixabay</a>\n */',"",{version:3,sources:["webpack://./src/homepage.css"],names:[],mappings:"AAAA;IACI,SAAS;IACT,UAAU;AACd;;;AAGA;IACI,YAAY;IACZ,aAAa;IACb,iBAAiB;AACrB;;AAEA;IACI,iBAAiB;IACjB,gBAAgB;IAChB,aAAa;IACb,sBAAsB;IACtB,kCAAkC;AACtC;;AAEA;IACI,aAAa;IACb,aAAa;IACb,sBAAsB;IACtB,8BAA8B;AAClC;;AAEA;IACI,OAAO;IACP,mDAAwD;IACxD,4BAA4B;IAC5B,sBAAsB;IACtB,4BAA4B;IAC5B,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,YAAY;IACZ,aAAa;IACb,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,uBAAuB;IACvB,mBAAmB;AACvB;;AAEA;IACI,aAAa;IACb,uBAAuB;IACvB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,sBAAsB;AAC1B;;AAEA;IACI,0BAA0B;AAC9B;;;AAGA,aAAa;AACb;IACI,aAAa;IACb,6DAA6D;IAC7D,cAAc;IACd,sBAAsB;IACtB,SAAS;IACT,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,8CAA8C;IAC9C,uBAAuB;IACvB,8BAA8B;IAC9B,eAAe;AACnB;;AAEA;IACI,YAAY;IACZ,aAAa;AACjB;;AAEA;IACI,aAAa;IACb,sBAAsB;IACtB,2BAA2B;IAC3B,SAAS;AACb;;AAEA;IACI,YAAY;AAChB;;;;;;;;;AASA;;CAEC;;AAED;;EAEE;;;CAGD;;;;EAIC",sourcesContent:['* {\n    margin: 0;\n    padding: 0;\n}\n\n\n.hello {\n    width: 400px;\n    height: 400px;\n    background: green;\n}\n\n#content {\n    min-height: 100vh;\n    min-width: 100vw;\n    display: flex;\n    flex-direction: column;\n    background-color: rgb(255 244 219);\n}\n\n.header {\n    height: 200px;\n    display: flex;\n    flex-direction: column;\n    justify-content: space-between;\n}\n\n.main-container {\n    flex: 1;\n    background: url(\'./images/biriyani-g1a6f11a6f_1920.jpg\');\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-attachment: fixed;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.footer {\n    height: 30px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n}\n\n.name h2 {\n    padding: 20px;\n}\n\n.name {\n    display: flex;\n    flex-direction: column;\n    justify-content: center;\n    align-items: center;\n}\n\n.res-menus {\n    display: flex;\n    justify-content: center;\n    gap: 60px;\n    padding: 20px;\n}\n\n.res-menus div {\n    border: thin solid red;\n}\n\n.res-menus div:hover {\n    text-decoration: underline;\n}\n\n\n/* Menu css */\n.all-menus {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, minmax(300px, 450px));\n    max-width: 70%;\n    border: thin solid red;\n    gap: 30px;\n    padding: 20px;\n}\n\n.menu-card {\n    display: grid;\n    grid-template-columns: repeat(auto-fit, 200px);\n    border: thin solid blue;\n    justify-content: space-between;\n    /* gap: 20px; */\n}\n\n.menu-card img {\n    width: 200px;\n    height: 200px;\n}\n\n.description {\n    display: flex;\n    flex-direction: column;\n    justify-content: flex-start;\n    gap: 20px;\n}\n\n.description button {\n    width: 100px;\n}\n\n\n\n\n\n\n\n\n/* have to give credit\nPhoto by Pixabay: https://www.pexels.com/photo/alcohol-architecture-bar-beer-260922/ \n*/\n\n/*\nPhoto by Shourav Sheikh: https://www.pexels.com/photo/rice-platter-biriyani-11170284/ \n */\n\n\n /* \npixabay biriyani credit\n\n Image by <a href="https://pixabay.com/users/soumen59-8174545/?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7599454">Soumen Ghosh</a> from <a href="https://pixabay.com//?utm_source=link-attribution&amp;utm_medium=referral&amp;utm_campaign=image&amp;utm_content=7599454">Pixabay</a>\n */'],sourceRoot:""}]);const l=p},645:n=>{n.exports=function(n){var e=[];return e.toString=function(){return this.map((function(e){var t="",a=void 0!==e[5];return e[4]&&(t+="@supports (".concat(e[4],") {")),e[2]&&(t+="@media ".concat(e[2]," {")),a&&(t+="@layer".concat(e[5].length>0?" ".concat(e[5]):""," {")),t+=n(e),a&&(t+="}"),e[2]&&(t+="}"),e[4]&&(t+="}"),t})).join("")},e.i=function(n,t,a,r,o){"string"==typeof n&&(n=[[null,n,void 0]]);var i={};if(a)for(var c=0;c<this.length;c++){var s=this[c][0];null!=s&&(i[s]=!0)}for(var d=0;d<n.length;d++){var p=[].concat(n[d]);a&&i[p[0]]||(void 0!==o&&(void 0===p[5]||(p[1]="@layer".concat(p[5].length>0?" ".concat(p[5]):""," {").concat(p[1],"}")),p[5]=o),t&&(p[2]?(p[1]="@media ".concat(p[2]," {").concat(p[1],"}"),p[2]=t):p[2]=t),r&&(p[4]?(p[1]="@supports (".concat(p[4],") {").concat(p[1],"}"),p[4]=r):p[4]="".concat(r)),e.push(p))}},e}},667:n=>{n.exports=function(n,e){return e||(e={}),n?(n=String(n.__esModule?n.default:n),/^['"].*['"]$/.test(n)&&(n=n.slice(1,-1)),e.hash&&(n+=e.hash),/["'() \t\n]|(%20)/.test(n)||e.needQuotes?'"'.concat(n.replace(/"/g,'\\"').replace(/\n/g,"\\n"),'"'):n):n}},537:n=>{n.exports=function(n){var e=n[1],t=n[3];if(!t)return e;if("function"==typeof btoa){var a=btoa(unescape(encodeURIComponent(JSON.stringify(t)))),r="sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a),o="/*# ".concat(r," */"),i=t.sources.map((function(n){return"/*# sourceURL=".concat(t.sourceRoot||"").concat(n," */")}));return[e].concat(i).concat([o]).join("\n")}return[e].join("\n")}},379:n=>{var e=[];function t(n){for(var t=-1,a=0;a<e.length;a++)if(e[a].identifier===n){t=a;break}return t}function a(n,a){for(var o={},i=[],c=0;c<n.length;c++){var s=n[c],d=a.base?s[0]+a.base:s[0],p=o[d]||0,u="".concat(d," ").concat(p);o[d]=p+1;var l=t(u),A={css:s[1],media:s[2],sourceMap:s[3],supports:s[4],layer:s[5]};if(-1!==l)e[l].references++,e[l].updater(A);else{var m=r(A,a);a.byIndex=c,e.splice(c,0,{identifier:u,updater:m,references:1})}i.push(u)}return i}function r(n,e){var t=e.domAPI(e);return t.update(n),function(e){if(e){if(e.css===n.css&&e.media===n.media&&e.sourceMap===n.sourceMap&&e.supports===n.supports&&e.layer===n.layer)return;t.update(n=e)}else t.remove()}}n.exports=function(n,r){var o=a(n=n||[],r=r||{});return function(n){n=n||[];for(var i=0;i<o.length;i++){var c=t(o[i]);e[c].references--}for(var s=a(n,r),d=0;d<o.length;d++){var p=t(o[d]);0===e[p].references&&(e[p].updater(),e.splice(p,1))}o=s}}},569:n=>{var e={};n.exports=function(n,t){var a=function(n){if(void 0===e[n]){var t=document.querySelector(n);if(window.HTMLIFrameElement&&t instanceof window.HTMLIFrameElement)try{t=t.contentDocument.head}catch(n){t=null}e[n]=t}return e[n]}(n);if(!a)throw new Error("Couldn't find a style target. This probably means that the value for the 'insert' parameter is invalid.");a.appendChild(t)}},216:n=>{n.exports=function(n){var e=document.createElement("style");return n.setAttributes(e,n.attributes),n.insert(e,n.options),e}},565:(n,e,t)=>{n.exports=function(n){var e=t.nc;e&&n.setAttribute("nonce",e)}},795:n=>{n.exports=function(n){var e=n.insertStyleElement(n);return{update:function(t){!function(n,e,t){var a="";t.supports&&(a+="@supports (".concat(t.supports,") {")),t.media&&(a+="@media ".concat(t.media," {"));var r=void 0!==t.layer;r&&(a+="@layer".concat(t.layer.length>0?" ".concat(t.layer):""," {")),a+=t.css,r&&(a+="}"),t.media&&(a+="}"),t.supports&&(a+="}");var o=t.sourceMap;o&&"undefined"!=typeof btoa&&(a+="\n/*# sourceMappingURL=data:application/json;base64,".concat(btoa(unescape(encodeURIComponent(JSON.stringify(o))))," */")),e.styleTagTransform(a,n,e.options)}(e,n,t)},remove:function(){!function(n){if(null===n.parentNode)return!1;n.parentNode.removeChild(n)}(e)}}}},589:n=>{n.exports=function(n,e){if(e.styleSheet)e.styleSheet.cssText=n;else{for(;e.firstChild;)e.removeChild(e.firstChild);e.appendChild(document.createTextNode(n))}}},643:(n,e,t)=>{n.exports=t.p+"a84e307429ac9f2591f3.jpg"}},e={};function t(a){var r=e[a];if(void 0!==r)return r.exports;var o=e[a]={id:a,exports:{}};return n[a](o,o.exports,t),o.exports}t.m=n,t.n=n=>{var e=n&&n.__esModule?()=>n.default:()=>n;return t.d(e,{a:e}),e},t.d=(n,e)=>{for(var a in e)t.o(e,a)&&!t.o(n,a)&&Object.defineProperty(n,a,{enumerable:!0,get:e[a]})},t.g=function(){if("object"==typeof globalThis)return globalThis;try{return this||new Function("return this")()}catch(n){if("object"==typeof window)return window}}(),t.o=(n,e)=>Object.prototype.hasOwnProperty.call(n,e),(()=>{var n;t.g.importScripts&&(n=t.g.location+"");var e=t.g.document;if(!n&&e&&(e.currentScript&&(n=e.currentScript.src),!n)){var a=e.getElementsByTagName("script");a.length&&(n=a[a.length-1].src)}if(!n)throw new Error("Automatic publicPath is not supported in this browser");n=n.replace(/#.*$/,"").replace(/\?.*$/,"").replace(/\/[^\/]+$/,"/"),t.p=n})(),t.b=document.baseURI||self.location.href,t.nc=void 0,(()=>{var n=t(379),e=t.n(n),a=t(795),r=t.n(a),o=t(569),i=t.n(o),c=t(565),s=t.n(c),d=t(216),p=t.n(d),u=t(589),l=t.n(u),A=t(348),m={};function h(n){const e=document.createElement("div");e.classList.toggle("header");const t=document.createElement("div");t.classList.toggle("main-container");const a=document.createElement("div");a.classList.toggle("footer");const r=document.createElement("h2");r.textContent="My Restaurant";const o=document.createElement("p"),i=document.createElement("p"),c=document.createElement("p");o.textContent="127/1, Shusme Road",i.textContent="Kushtia, Khulna, Bangladesh",c.textContent="Mob: +88017xxxxxxxx";const s=document.createElement("div");s.classList.toggle("name"),s.appendChild(r),s.appendChild(o),s.appendChild(i),s.appendChild(c),e.appendChild(s);const d=document.createElement("div");d.classList.toggle("res-menus"),e.appendChild(d);const p=document.createElement("div"),u=document.createElement("div"),l=document.createElement("div");p.textContent="Home",u.textContent="Menu",l.textContent="About",d.appendChild(p),d.appendChild(u),d.appendChild(l);const A=document.createElement("p");A.textContent="Copyright © Shirsho Dipto",a.appendChild(A),n.appendChild(e),n.appendChild(t),n.appendChild(a)}m.styleTagTransform=l(),m.setAttributes=s(),m.insert=i().bind(null,"head"),m.domAPI=r(),m.insertStyleElement=p(),e()(A.Z,m),A.Z&&A.Z.locals&&A.Z.locals;const f=document.querySelector("#content");h(f),document.querySelectorAll(".res-menus div").forEach((n=>{n.addEventListener("click",(n=>{"Home"===n.target.textContent?h(f):"Menu"===n.target.textContent?function(n){const e=document.createElement("div");e.classList.toggle("all-menus"),n.appendChild(e);const t=document.createElement("div");t.classList.toggle("menu-card");const a=document.createElement("div");a.classList.toggle("menu-card");const r=document.createElement("div");r.classList.toggle("menu-card");const o=document.createElement("div");o.classList.toggle("menu-card");const i=document.createElement("div");i.classList.toggle("menu-card");const c=document.createElement("div");c.classList.toggle("menu-card"),e.appendChild(t),e.appendChild(a),e.appendChild(r),e.appendChild(o),e.appendChild(i),e.appendChild(c)}(document.querySelector(".main-container")):n.target.textContent}))}))})()})();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,